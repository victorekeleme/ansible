---
# - name: wait for ssh connection
#   hosts: all
#   gather_facts: False
#   tasks:
#     - name: Ensure ssh port open
#       wait_for:
#         port: 22
#         delay: 10
#         timeout: 100
#         search_regex: OPENSSH
#         host: '{{ (ansible_ssh_host|default(ansible_host)) | default(inventory_hostname)  }}'
#       vars:
#         ansible_connection: local
#         ansible_python_interpreter: /usr/bin/python

- name: Install docker and docker-compose
  hosts: all
  become: yes
  gather_facts: False
  vars_files:
    - project-vars
  tasks:
    - name: install docker
      vars:
        ansible_python_interpreter: /usr/bin/python
      yum:
        name: docker
        state: present
    - name: Add {{server_user}} to docker group
      user:
        name: "{{server_user}}"
        groups: adm, docker

    - name: Reconnet to server session
      meta: reset_connection
    - name: Make sure docker is running
      systemd:
        name: docker
        state: started

    - name: Install docker python module (for ec2 instance only)
      pip:
        name:
          - docker
          - docker-compose

    - name: Install docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.27.4/docker-compose-{{lookup('pipe', 'uname -s')}}-{{lookup('pipe', 'uname -m')}}
        dest: /usr/local/bin/docker-compose
        mode: +x



- name: Start docker containers
  hosts: all
  become: true
  become_user: "{{server_user}}"
  vars_files:
    - project-vars
  tasks:
    - name: Copy docker-compose file to remote_server
      copy:
        src: /home/victor/project/docker-compose.yaml
        dest: /home/{{server_user}}/docker-compose.yaml
    - name: Login to docker registry
      community.docker.docker_login:
        username: "{{docker_username}}"
        password: "{{docker_password}}"
    - name: Create and start services
      community.docker.docker_compose:
        project_src: /home/{{server_user}}
        state: present











# - name: Test docker pull
#   hosts: aws_server
#   tasks:
#     - name: pull redis
#         command: docker pull redis

# - name: Test docker pull
#   hosts: aws_server
#   tasks:
#     - name: pull redis
#       community.docker.docker_image:
#         name: redis
#         state: absent